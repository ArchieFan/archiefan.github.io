<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta content="width=device-width, initial-scale=1.0" name="viewport">

	<title>My Portfolio</title>
	<meta content="" name="description">
	<meta content="" name="keywords">

	<!-- Favicons -->
	<link href="assets/img/favicon.png" rel="icon">

	<!-- Google Fonts -->
	<link href="https://fonts.gstatic.com" rel="preconnect">
	<link
		href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
		rel="stylesheet">

	<!-- Vendor CSS Files -->
	<link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
	<link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">

	<!-- Template Main CSS File -->
	<link href="assets/css/style.css" rel="stylesheet">

	<script src="assets/js/layout.js"></script>
</head>

<body>

	<!-- ======= Header ======= -->
	<header id="header" class="header fixed-top d-flex align-items-center">

		<div class="d-flex align-items-center justify-content-between">
			<i class="bi bi-list toggle-sidebar-btn"></i>
		</div><!-- End Logo -->

		<nav class="header-nav ms-auto">

			<ul class="d-flex align-items-center">
				<div w3-include-html="header.htm"></div>
			</ul>
		</nav><!-- End Icons Navigation -->
	</header><!-- End Header -->

	<!-- ======= Sidebar ======= -->
	<div w3-include-html="sidebar.htm"></div>

	<main id="main" class="main">

		<h1>
			<span><span>1.<span>&nbsp;</span></span></span>
			<b><span>Add & Commit</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>You have added and committed the files this way multiple times, but what if I
				tell you it can be done in one line with the `-am` flag?&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span style="color:rgb(17,17,17);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:12.0000pt;background:rgb(245,245,245);"><br></span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git add .</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">
				<o:p></o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git commit -m "</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">initial submit</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">"</span><span style="color:rgb(17,17,17);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:10.5000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>Try this instead, and it will add the file changes and create the commit using
				the message.&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git commit -am "</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">initial submit</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">"</span><span style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>2.<span>&nbsp;</span></span></span>
			<b><span>Amend</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>You can rename your current commit message using the `--amend` flag and write
				the new message. This will help you with accidental messages.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git commit --amend -m "</span><span class="15"
				style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">Amended submit</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">"</span><span style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>You can include additional changes to the current commit before pushing it to
				the remote repository. To do so, you need to add the file changes and then commit using the `--amend`
				flag. To retain the previous commit message, simply use the `--no-edit` flag.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git add . </span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">
				<o:p></o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git commit --amend --no-edit</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<h1>
			<span><span>3.<span>&nbsp;</span></span></span>
			<b><span>Override Remote History</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>If you want to push a local commit and override the remote history without
				dealing with resolving issues, you can use the `--force` flag. However, it's important to note that
				using the force flag is not recommended and should only be used when you're absolutely sure of what
				you're doing. Keep in mind that using the force flag will rewrite the remote history.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git push origin master --force</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>4.<span>&nbsp;</span></span></span>
			<b><span>Revert</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>To undo a commit in Git, you can use the `revert` command. However, this
				command does not remove any commits. Instead, it creates a new commit that undoes the changes made by
				the original commit.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>We will use the `log` with `--oneline` flag to view commit history in a
				shorter form.&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git log --oneline</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>To revert to a previous commit, we use the `git revert` command followed by
				the commit ID. This creates a new commit with the changes from the previous commit.</span><span>
				<o:p></o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git revert </span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">
				<font face="Courier New">“commit ID”</font>
			</span><span style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>5.<span>&nbsp;</span></span></span>
			<b><span>Codespace</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>Do you want to increase your productivity on GitHub? With GitHub Code Spaces,
				you can now edit and run your code directly in your browser.&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>To access this feature, simply navigate to your favorite repository, press the
				period key (".") on your keyboard, and it will redirect you to the VSCode UI.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><img width="553" height="254" src="Advanced Git.files/Advanced Git2055.png"><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>You can make changes to the code and push them to your remote repository.
				However, if you want to run the code in the terminal, you need to run the Codespace in the cloud. The
				free version offers an excellent option for running your Python code in your browser.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><img width="553" height="382" src="Advanced Git.files/Advanced Git2321.png"><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>6.<span>&nbsp;</span></span></span>
			<b><span>Stash</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>When working on a project, you can add files to a staging area and then commit
				them to save your current progress. However, there is another way to save your work easily using the
				`stash` command. When you use `stash`, you save your current progress without adding it to the staging
				area or committing it. This allows you to save your progress and restore it whenever you need
				to.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>We will save our current progress by providing a name and stashing
				it.&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git stash save new-</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">start</span><span style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>&nbsp;You can view your stash list and note the corresponding index to
				retrieve it.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git stash list</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>Our stash of "new </span><span>start</span><span>" is saved at index 0. To retrieve it, use this
				command:</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git stash apply 0</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>7.<span>&nbsp;</span></span></span>
			<b><span>Rename Branch</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>You have the option to rename your default branch name to something more
				appropriate. In this case, we will rename "master" to "main".&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git branch -M main</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>You can verify the changes using the following command:&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git status</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>8.<span>&nbsp;</span></span></span>
			<b><span>Decorate the Log</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>If you want to view a detailed history of all the commits made in the current
				repository, you can use the `git log` command. However, the output can be difficult to read. To make it
				more readable, you can use the `graph`, `decorate`, and `oneline` flags. This will display the changes
				made in multiple branches and how they merge.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git log --graph --decorate --oneline</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>9.<span>&nbsp;</span></span></span>
			<b><span>Switch Back Branch</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>On several occasions, I have switched to a new branch and forgotten the name
				of the previous branch. Consequently, I had to use the `git branch -a` command to view the list of
				branch names. However, there is a simpler way to return to the original branch by using the dash “-”
				after the `git checkout` command.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>We will first create the new Git branch “</span><span>new-branch</span><span>
				<font face="Calibri">”.</font>
			</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git branch </span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">new-branch</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>We will switch to the “</span><span>new-branch</span><span>
				<font face="Calibri">” branch.</font>
			</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git checkout </span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">new-branch</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>Switched to branch '</span><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">new-branch</span>


		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>To go back to the original branch, we will use the following
				command:</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git checkout -</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<h1>
			<span><span>10.<span>&nbsp;</span></span></span>
			<b><span>Copy Remote Change</span></b><b><span>
					<o:p></o:p>
				</span></b>
		</h1>
		<p><span>We have learned about overriding the remote repository. Let's learn how to
				override the local repository using the remote repository.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>We will use the `fetch` command to get the latest changes from the remote
				repository.&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git fetch origin</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>Then, we will use the 'reset' command with the 'hard' flag to override any
				local changes with the remote version. Please note that this will permanently discard any local
				changes.</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git reset --hard origin/master</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p><span>&nbsp;</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>If there are still untracked files, they can be removed using the following
				command:</span><span>
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>
		<p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;"><span class="15" style="
color:rgb(17,17,17);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:10.0000pt;background:rgb(245,245,245);">$ git clean -df</span><span
				style="font-size:12.0000pt;">
				<o:p></o:p>
			</span></p>
		<p><span>
				<o:p>&nbsp;</o:p>
			</span></p>


	</main><!-- End #main -->

	<!-- ======= Footer ======= -->
	<div w3-include-html="footer.htm"></div>
	<script>includeHTML();</script>

	<a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i
			class="bi bi-arrow-up-short"></i></a>

	<!-- Vendor JS Files -->
	<script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

	<!-- Template Main JS File -->
	<script src="assets/js/main.js"></script>

</body>

</html>