<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>My Portfolio</title>
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="assets/img/favicon.png" rel="icon">

    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link
        href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
        rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="assets/css/style.css" rel="stylesheet">

    <script src="assets/js/layout.js"></script>
</head>

<body>

    <!-- ======= Header ======= -->
    <header id="header" class="header fixed-top d-flex align-items-center">

        <div class="d-flex align-items-center justify-content-between">
            <i class="bi bi-list toggle-sidebar-btn"></i>
        </div><!-- End Logo -->

        <nav class="header-nav ms-auto">

            <ul class="d-flex align-items-center">
                <div w3-include-html="header.htm"></div>
            </ul>
        </nav><!-- End Icons Navigation -->
    </header><!-- End Header -->

    <!-- ======= Sidebar ======= -->
    <div w3-include-html="sidebar.htm"></div>

    <main id="main" class="main">

        <p class=MsoNormal align=center>
            <span style="font-family:SimSun;
font-size:10.5000pt;">Catalog</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoToc1><span><span><a href="#_Toc12160 "><span style="font-family:Calibri;
">Q0. What is OOP?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                    <o:p></o:p>
                </span></p>
        <p class=MsoToc1><span><a href="#_Toc24158 "><span style="font-family:Calibri;
">Q0.1 &nbsp;Principles of Object Oriented programming</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc16240 "><span style="font-family:Calibri;
">Q1. Why OOP?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc13541 "><span style="font-family:Calibri;
">Q2. What are the important pillars in OOP?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc9593 "><span style="font-family:Calibri;
">Q3. What is a class and object?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc20502 "><span style="font-family:Calibri;
">Q4. Abstraction vs Encapsulation</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc19873 "><span style="font-family:Calibri;
">Q5. Explain Inheritance</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc17802 "><span style="font-family:Calibri;
">Q6. &nbsp;Explain virtual Keyword?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc4645 "><span style="font-family:Calibri;
">Q7. &nbsp;What is overriding?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc15744 "><span style="font-family:Calibri;
">Q8. Explain overloading?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc15700 "><span style="font-family:Calibri;
">Q9. Overloading vs overriding</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc22493 "><span style="font-family:Calibri;
">Q10. What is polymorphism?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc6950 "><span style="font-family:Calibri;
">Q11. &nbsp;Can polymorphism work without inheritance?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc13771 "><span style="font-family:Calibri;
">Q12. Explain static vs dynamic polymorphism ?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc8399 "><span style="font-family:Calibri;
">Q13. Explain operator overloading?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc13723 "><span style="font-family:Calibri;
">Q14. &nbsp;How to do custom operator overloading?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc8601 "><span style="font-family:Calibri;
">Q15. Why do we need abstract class?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc6827 "><span style="font-family:Calibri;
">Q16. Are abstract method virtual?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc962 "><span style="font-family:Calibri;
">Q17. can we create a instance of abstract classes?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc26953 "><span style="font-family:Calibri;
">Q18. Is it compulsory to implement abstract methods?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc15678 "><span style="font-family:Calibri;
">Q19. why simple base class replace abstract class?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc16115 "><span style="font-family:Calibri;
">Q20. &nbsp;Explain interfaces and why do we need it?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc24453 "><span style="font-family:Calibri;
">Q21. can you write logic in interface?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc29034 "><span style="font-family:Calibri;
">Q22. Can we define methods as private in interface?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc29401 "><span style="font-family:Calibri;
">Q23. If I want to change interface whats the best practice?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc21350 "><span style="font-family:Calibri;
">Q24. Explain interface segregation principle</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc9378 "><span style="font-family:Calibri;
">Q25. can you create instance of interface?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc13301 "><span style="font-family:Calibri;
">Q26. Can we do Multiple inheritance with abstract class?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc10712 "><span style="font-family:Calibri;
">Q27. What is the different between </span><span style="font-family:Calibri;
background:rgb(0,255,0);">abstract class </span><span style="font-family:Calibri;
">and </span><span style="font-family:Calibri;
background:rgb(0,255,0);">interface</span><span style="font-family:Calibri;
">?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc5578 "><span style="font-family:Calibri;
">Q28. Can I have a pure abstract class? Same as interface?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc32147 "><span style="font-family:Calibri;
">Q29. &nbsp;How to prevent a class from being inherited?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc17926 "><span style="font-family:Calibri;
">Q30. &nbsp;What are Access specifiers? What is the default access modifier in a
                        class?</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc9525 "><span style="font-family:Calibri;
">Q31 - Method Hiding & Overriding</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc30271 "><span style="font-family:Calibri;
">Q32 - </span><span style="font-family:Calibri;
">data hiding or shadowing</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoToc1><span><a href="#_Toc11981 "><span style="font-family:Calibri;
">Q32. </span><span style="font-family:Calibri;
">What is Aggregation , Association and Composition ?&nbsp;</span><span style="font-family:Calibri;
">&#9;</span></a></span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal></span><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal style="page-break-before:always;"><span style="font-family:Calibri;
">The 3 P’s</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span style="font-family:Wingdings;"><span>&#252;</span></span>
            <span style="font-family:Calibri;
">Be to the </span><b><span style="font-family:Calibri;
font-weight:bold;">Point</span></b><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span style="font-family:Wingdings;"><span>&#252;</span></span>
            <span style="font-family:Calibri;
">Be </span><b><span style="font-family:Calibri;
font-weight:bold;">Prepared</span></b><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span style="font-family:Wingdings;"><span>&#252;</span></span>
            <span style="font-family:Calibri;
">Be </span><b><span style="font-family:Calibri;
font-weight:bold;">Practical</span></b><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc2270"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
"><a name="_Toc12160">Q0. What is OOP?</a></span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">All computer language can learn how to mimic the real world. Like people can have
                different properties (name, address, hair color, all kind of thing) and just the way you grouping all
                information.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc24158"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q0.1 &nbsp;Principles of Object Oriented programming</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">The fundamental principles of Object-Oriented Programming (OOP) are:</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Encapsulation: Encapsulation is the practice of hiding data and behavior within a single
                unit, or object, and restricting access to that object's internal state to ensure its
                integrity.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Abstraction: Abstraction involves simplifying complex systems by breaking them down into
                smaller, more manageable components that can be reused across different applications.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Inheritance: Inheritance allows developers to create new classes based on existing ones,
                inheriting their properties and methods, and providing a way to reuse code across multiple
                objects.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Polymorphism: Polymorphism allows objects to take on multiple forms, enabling developers
                to reuse code across objects with different behaviors or functionality.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">These principles provide a foundation for developing software applications that are
                modular, maintainable, and reusable. Once again, I apologize for any confusion or misinformation I may
                have caused.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=p style="margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:13.1500pt;
margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(217,217,227);
border-right:1.0000pt solid rgb(217,217,227);
border-bottom:1.0000pt solid rgb(217,217,227);border-left:1.0000pt solid rgb(217,217,227);
padding:0pt 0pt 0pt 0pt ;
background:rgb(247,247,248);"><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
background:rgb(247,247,248);">Modularity </span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
">and </span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
background:rgb(247,247,248);">composition </span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
">are important concepts in software development that are often used in conjunction with
                Object-Oriented Programming (OOP) principles.</span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;">
                <o:p></o:p>
            </span></p>
        <p class=p style="margin-top:13.1500pt;margin-right:0.0000pt;margin-bottom:13.1500pt;
margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(217,217,227);
border-right:1.0000pt solid rgb(217,217,227);
border-bottom:1.0000pt solid rgb(217,217,227);border-left:1.0000pt solid rgb(217,217,227);
padding:0pt 0pt 0pt 0pt ;
background:rgb(247,247,248);"><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
">Modularity refers to the practice of breaking down software into smaller, more
                manageable components, often with the goal of improving code reuse, maintainability, and scalability. By
                dividing a program into smaller modules or components, it becomes easier to understand, test, and
                modify.</span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;">
                <o:p></o:p>
            </span></p>
        <p class=p style="margin-top:13.1500pt;margin-right:0.0000pt;margin-bottom:13.1500pt;
margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(217,217,227);
border-right:1.0000pt solid rgb(217,217,227);
border-bottom:1.0000pt solid rgb(217,217,227);border-left:1.0000pt solid rgb(217,217,227);
padding:0pt 0pt 0pt 0pt ;
background:rgb(247,247,248);"><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
">Composition, on the other hand, involves creating objects by combining smaller, more
                specific objects. In composition, a class may have one or more instances of other classes as its member
                variables, which are used to delegate functionality to these other objects. By using composition,
                developers can create more complex objects from smaller, reusable components, thereby improving code
                flexibility, maintainability, and reusability.</span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;">
                <o:p></o:p>
            </span></p>
        <p class=p style="margin-top:13.1500pt;margin-right:0.0000pt;margin-bottom:0.0000pt;
margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(217,217,227);
border-right:1.0000pt solid rgb(217,217,227);
border-bottom:1.0000pt solid rgb(217,217,227);border-left:1.0000pt solid rgb(217,217,227);
padding:0pt 0pt 0pt 0pt ;
background:rgb(247,247,248);"><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;
">In summary, while modularity and composition are not typically considered core
                principles of OOP, they are important concepts that are often used in conjunction with OOP principles to
                create more modular, maintainable, and reusable software applications.</span><span style="font-family:'Segoe UI';color:rgb(55,65,81);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:8.0000pt;">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc16240"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q1. Why OOP?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">Helps us to think in terms of real
                world object. &nbsp;Your code is mimicking the real world object.</span><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">example like banking, pension, fund, inventory, payroll, billing, accounting </span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Advantages of OOP</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;
font-weight:bold;"><span>1.</span></span>
            <b><span style="font-family:Calibri;
font-weight:bold;">Reuse </span></b><span style="font-family:Calibri;
">of code through </span><b><span style="font-family:Calibri;
font-weight:bold;">inheritance</span></b><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;
font-weight:bold;"><span>2.</span></span>
            <b><span style="font-family:Calibri;
font-weight:bold;">Flexibility </span></b><span style="font-family:Calibri;
">through </span><b><span style="font-family:Calibri;
font-weight:bold;">polymorphism</span></b><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;"><span>3.</span></span>
            <span style="font-family:Calibri;
">The principle of data hiding/</span><b><span style="font-family:Calibri;
font-weight:bold;">encapsulation </span></b><span style="font-family:Calibri;
">helps the programmer to build </span><b><span style="font-family:Calibri;
font-weight:bold;">secure </span></b><span style="font-family:Calibri;
">program</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;
font-weight:bold;"><span>4.</span></span>
            <b><span style="font-family:Calibri;
font-weight:bold;">Abstraction </span></b><span style="font-family:Calibri;
">give </span><b><span style="font-family:Calibri;
font-weight:bold;">better control</span></b><span style="font-family:Calibri;
font-weight:normal;">&nbsp;by </span><b><span style="font-family:Calibri;
font-weight:bold;">restricting </span></b><span style="font-family:Calibri;
font-weight:normal;">the child classes to implement particular method, and to
            </span><b><span style="font-family:Calibri;
font-weight:bold;">enforce </span></b><span style="font-family:Calibri;
font-weight:normal;">all child class have the same name and same signature, </span><b><span style="font-family:Calibri;
font-weight:bold;">more secure</span></b><span style="font-family:Calibri;
font-weight:normal;">&nbsp;by hiding certain details </span><span style="font-family:Calibri;
font-weight:normal;">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;"><span>5.</span></span>
            <span style="font-family:Calibri;
">OOP system can be </span><b><span style="font-family:Calibri;
font-weight:bold;">easily upgraded</span></b><span style="font-family:Calibri;
">&nbsp;from small to large system.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;"><span>6.</span></span>
            <span style="font-family:Calibri;
">Modularity for </span><b><span style="font-family:Calibri;
font-weight:bold;">easier troubleshooting</span></b><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><b><span style="font-family:Calibri;
font-weight:bold;">
                    <o:p>&nbsp;</o:p>
                </span></b></p>
        <p class=MsoNormal><span style="font-family:Calibri;
font-weight:normal;">Disadvantage of OOP</span><span style="font-family:Calibri;
font-weight:normal;">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal>
            <span style="font-family:Calibri;
font-weight:normal;"><span>1.</span></span>
            <span style="font-family:Calibri;
font-weight:normal;">It is not suitable for small applications. (OOP is required a lot of
                planning. if the project is small, why bother to spend so much tome on planning. )</span><span style="font-family:Calibri;
font-weight:normal;">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
font-weight:normal;">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
font-weight:normal;background:rgb(0,255,0);
">Object is like a cell. &nbsp;message is passed between objects to objects. Object itself
                is not important focus on the message.</span><span style="font-family:Calibri;
font-weight:normal;background:rgb(0,255,0);
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
font-weight:normal;background:rgb(0,255,0);
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
font-weight:normal;background:rgb(0,255,0);
">late binding so more flexible. &nbsp;OOP is all about message and object
                behavior.</span><span style="font-family:Calibri;
font-weight:normal;background:rgb(0,255,0);
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
font-weight:normal;">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="470" height="222" src="OOP QnA.files/OOP QnA6869.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="554" height="168" src="OOP QnA.files/OOP QnA6872.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc13541"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q2. What are the important pillars in OOP?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Abstraction - </span><span style="font-family:Calibri;
background:rgb(255,255,0);">show only what is
                necessary</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Polymorphism - </span><span style="font-family:Calibri;
background:rgb(255,255,0);">Object acts differently under
                different conditions</span><span style="font-family:Calibri;
">.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Inheritance - </span><span style="font-family:Calibri;
background:rgb(255,255,0);">Parent Child
                relationship</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Encapsulation - </span><span style="font-family:Calibri;
background:rgb(255,255,0);">Hide complexity</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="317" height="136" src="OOP QnA.files/OOP QnA7100.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc9593"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q3. What is a class and object?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">class is a type, </span><span style="font-family:Calibri;
background:rgb(0,255,0);">blue print</span><span style="font-family:Calibri;
">&nbsp;and object is a</span><span style="font-family:Calibri;
background:rgb(255,255,0);">&nbsp;instance of the
                class</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc20502"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q4. Abstraction vs Encapsulation</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Abstraction - show only what is necessary</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Encapsulation - Hide complexity</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">Abstraction happens during design
                phase.</span><span style="font-family:Calibri;
">&nbsp;&nbsp;You design what has to be shown public</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">During execution phase, developer </span><span style="font-family:Calibri;
background:rgb(255,255,0);">uses Encapsulation to implement of
                Abstraction</span><span style="font-family:Calibri;
">.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">**** Encapsulation implements Abstraction.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><img width="252" height="176" src="OOP QnA.files/OOP QnA7516.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc19873"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q5. Explain Inheritance</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">Inheritance </span><span style="font-family:Calibri;
background:rgb(255,255,0);">defines a parent child
                relationship</span><span style="font-family:Calibri;
">. &nbsp;What is “is-a” relationship? “is-a” is parent child relationship.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="233" height="429" src="OOP QnA.files/OOP QnA7661.png"><img width="231"
                height="428" src="OOP QnA.files/OOP QnA7662.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="206" height="430" src="OOP QnA.files/OOP QnA7667.png"><img width="240"
                height="432" src="OOP QnA.files/OOP QnA7668.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc17802"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q6. &nbsp;Explain virtual Keyword?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <h1><a name="_Toc4645"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q7. &nbsp;What is overriding?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">Virtual </span><span style="font-family:Calibri;
">keyword helps us to </span><span style="font-family:Calibri;
background:rgb(255,255,0);">define some logic in the parent
                class which can be overridden in the child class</span><span style="font-family:Calibri;
">.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc15744"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q8. Explain overloading?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">Method overloading means </span><span style="font-family:Calibri;
background:rgb(255,255,0);">same method names with different
                signature in the same class</span><span style="font-family:Calibri;
">.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="316" height="286" src="OOP QnA.files/OOP QnA7951.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc15700"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q9. Overloading vs overriding</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">Overloading - </span><span style="font-family:Calibri;
background:rgb(255,255,0);">method with same names with
                different signatures </span><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">(Compile time) (same class) (don’t
                need inheritance)</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Overriding - </span><span style="font-family:Calibri;
background:rgb(255,255,0);">using virtual keyword and
                overriding in child class.</span><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">&nbsp;(runtime) (child class) (same
                name same signature) (need inheritance)</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="281" height="214" src="OOP QnA.files/OOP QnA8239.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc22493"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q10. What is polymorphism?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">It is an </span><span style="font-family:Calibri;
background:rgb(255,255,0);">ability of object to act
                differently under different condition</span><span style="font-family:Calibri;
">.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="420" height="301" src="OOP QnA.files/OOP QnA8343.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc6950"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q11. &nbsp;Can polymorphism work without inheritance?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">The answer is NO. virtual/override need inheritance to implement</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc13771"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q12. Explain static vs dynamic polymorphism ?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">runtime = dynamic poly is implemented by method overriding</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">compile time = static poly is implemented by method overloading</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc8399"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q13. Explain operator overloading?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">operator overloading helps to redefine additional functionalities for plus, minus, multi,
                and addition.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc13723"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q14. &nbsp;How to do custom operator overloading?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:monospace;color:rgb(0,0,0);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:7.5000pt;background:rgb(238,238,238);
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Calibri;
color:rgb(136,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">// Overload + operator to add two Box objects.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Calibri;
color:rgb(0,0,136);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">public</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(0,0,136);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">static</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,0,102);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">Box</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(0,0,136);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(255,255,0);background:rgb(238,238,238);
">operator</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">+</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">(</span><span style="font-family:Calibri;
color:rgb(102,0,102);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">Box</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;b</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">,</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,0,102);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">Box</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;c</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">)</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">{</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,0,102);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">Box</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;box </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">=</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(0,0,136);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">new</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,0,102);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">Box</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">();</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;box</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">length </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">=</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;b</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">length </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">+</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;c</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">length</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">;</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;box</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">breadth </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">=</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;b</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">breadth </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">+</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;c</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">breadth</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">;</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;box</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">height </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">=</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;b</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">height </span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">+</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;c</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">.</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">height</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">;</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Calibri;
color:rgb(0,0,136);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">return</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;box</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">;</span><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">
                <o:p></o:p>
            </span></p>
        <p class=pre style="margin-left:0.0000pt;text-indent:0.0000pt;border-top:1.0000pt solid rgb(136,136,136);
border-right:1.0000pt solid rgb(136,136,136);
border-bottom:1.0000pt solid rgb(136,136,136);border-left:1.0000pt solid rgb(136,136,136);
padding:1pt 1pt 1pt 1pt ;
background:rgb(238,238,238);"><span style="font-family:Calibri;
color:rgb(0,0,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Calibri;
color:rgb(102,102,0);letter-spacing:0.0000pt;text-transform:none;
font-style:normal;font-size:7.5000pt;
background:rgb(238,238,238);">}</span><span style="font-family:Calibri;
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
font-size:7.5000pt;">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc8601"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q15. Why do we need abstract class?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">abstract class is a partially defined parent class.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal>
            <span style="font-family:Arial;background:rgb(255,255,0);
"><span>1)</span></span>
            <span style="font-family:Arial;
background:rgb(255,255,0);">To achieve security</span><span style="font-family:Arial;">&nbsp;- hide certain
                details and only show the important details of an object.</span><span style="font-family:Arial;">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Arial;background:rgb(255,255,0);
"><span>2)</span></span>
            <span style="font-family:Arial;
background:rgb(255,255,0);">Enforcement </span><span style="font-family:Arial;">- Abstract method is
                defined in the parent class </span><span style="font-family:Arial;
background:rgb(255,255,0);">to restricted the child classes to implement particular
                method</span><span style="font-family:Arial;">.
                &nbsp;So all child classes have to implement that particular methods </span><span style="font-family:Arial;
background:rgb(255,255,0);">to enforce all child class have the same name and same
                signature</span><span style="font-family:Arial;">.</span><span style="font-family:Arial;">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal>
            <span style="font-family:Arial;"><span>3)</span></span>
            <span style="font-family:Arial;">Used to
            </span><span style="font-family:Arial;
background:rgb(255,255,0);">group and share the common method for derived child
                class</span><span style="font-family:Arial;">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Arial;">Avoid user
                to create instance directly from the base/parent class.</span><span style="font-family:Arial;">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#9899;</span></span>
            <span style="font-family:Calibri;
">An abstract class says you can't create me directly but anything that inherits from me
                gets this code.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#9899;</span></span>
            <span style="font-family:Calibri;
">It's a blend of interface and base class</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#9899;</span></span>
            <span style="font-family:Calibri;
">Helper class is better than abstract class if you just want to share the common method.
                Must be “is a” situation.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc6827"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q16. Are abstract method virtual?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">Yes. by default is virtual.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><img width="174" height="55" src="OOP QnA.files/OOP QnA10006.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc962"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q17. can we create a instance of abstract classes?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">No.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc26953"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q18. Is it compulsory to implement abstract methods?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">Yes.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc15678"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q19. why simple base class replace abstract class?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">A simple base class cannot be defined in a pure half way. Every methods must have
                implementation in simple base class.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc16115"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q20. &nbsp;Explain interfaces and why do we need it?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;
background:rgb(255,255,0);"><span>&#117;</span></span>
            <span style="font-family:Calibri;
background:rgb(255,255,0);">interface is Contract</span><span style="font-family:Calibri;
">. &nbsp;It a legal binding of developer who create the class and consumer who is using the
                class. After inherited from interface, the child classes have to follow all the properties and methods
                form the interface. (</span><span style="font-family:Calibri;
background:rgb(255,255,0);">By doing so, you have better
                control of impact analysis and you have better control on change management</span><span style="font-family:Calibri;
">)</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;
background:rgb(255,255,0);"><span>&#117;</span></span>
            <span style="font-family:Calibri;
background:rgb(255,255,0);">Multiple inheritance </span><span style="font-family:Calibri;
">- helps to add new methods without affecting the old interfaces.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;
background:rgb(255,255,0);"><span>&#117;</span></span>
            <span style="font-family:Calibri;
background:rgb(255,255,0);">Signature </span><span style="font-family:Calibri;
">- (no body) don’t have any logic or implementation</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><img width="556" height="290" src="OOP QnA.files/OOP QnA10827.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc24453"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q21. can you write logic in interface?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">No.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc29034"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q22. Can we define methods as private in interface?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">No. All public by default.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc29401"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q23. If I want to change interface whats the best practice?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Create a new interface attached on the old one (Multiple inheritance)</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">public class customer :
                IOldCustomer, INewCustomer </span><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal style="margin-left:21.0000pt;text-indent:-21.0000pt;
">
            <span style="font-family:Wingdings;"><span>&#117;</span></span>
            <span style="font-family:Calibri;
">Create a new interface and inherited from the old one</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span>
        </p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">public interface INewCustomer :
                IOldCustomer</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc21350"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q24. Explain interface segregation principle</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">Create a lot small interface, but you are not force client to use any unnecessary
                methods.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc9378"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q25. can you create instance of interface?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">No</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc13301"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q26. Can we do Multiple inheritance with abstract class?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">No. &nbsp;only interface can.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc10712"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q27. What is the different between </span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
background:rgb(0,255,0);">abstract class </span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">and </span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
background:rgb(0,255,0);">interface</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">interface </span><span style="font-family:Calibri;
background:rgb(255,255,0);">can only contain abstract
                method</span><span style="font-family:Calibri;
">. But, abstract class </span><span style="font-family:Calibri;
background:rgb(255,255,0);">can contain both abstract and
                non-abstract method</span><span style="font-family:Calibri;
">. &nbsp;abstract class don’t allow </span><span style="font-family:Calibri;
background:rgb(255,255,0);">multi inheritance</span><span style="font-family:Calibri;
">, but interface can.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="556" height="112" src="OOP QnA.files/OOP QnA11751.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Why are interface empty with just shell methods and signature? </span><span style="font-family:Calibri;
background:rgb(255,255,0);">developer can focus purely on
                abstraction, focus on planning and design, focus on what are the most important. Interface is like a
                planning phase</span><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="256" height="104" src="OOP QnA.files/OOP QnA11964.png"><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="256" height="161" src="OOP QnA.files/OOP QnA11967.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="288" height="160" src="OOP QnA.files/OOP QnA11970.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="353" height="164" src="OOP QnA.files/OOP QnA11973.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="346" height="48" src="OOP QnA.files/OOP QnA11976.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="556" height="52" src="OOP QnA.files/OOP QnA11979.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="556" height="229" src="OOP QnA.files/OOP QnA11982.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p>&nbsp;</o:p>
                </span></b></h1>
        <h1><a name="_Toc5578"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q28. Can I have a pure abstract class? Same as interface?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="528" height="68" src="OOP QnA.files/OOP QnA12044.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc32147"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q29. &nbsp;How to prevent a class from being inherited?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">By using </span><b><span style="font-family:Calibri;
font-weight:bold;">SEALED </span></b><span style="font-family:Calibri;
">Keyword in class</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="329" height="124" src="OOP QnA.files/OOP QnA12134.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc17926"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q30. &nbsp;What are Access specifiers? What is the default access modifier in a
                    class?</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Access specifiers are keyword to specify the accessibility of a class, method, property,
                field.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="359" height="335" src="OOP QnA.files/OOP QnA12317.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="310" height="248" src="OOP QnA.files/OOP QnA12320.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Access modifier not only </span><span style="font-family:Calibri;
background:rgb(0,255,0);">protects our code</span><span style="font-family:Calibri;
">, it protects our data from security breaches or from bugs or things like that, it also
            </span><span style="font-family:Calibri;
background:rgb(0,255,0);">makes our code less confusing
            </span><span style="font-family:Calibri;
">and it provides us with just what we need to do our jobs.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc9525"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q31 - Method Hiding & Overriding</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="518" height="327" src="OOP QnA.files/OOP QnA12577.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">C# also provides a concept to hide the methods of the base class from derived class, this
                concept is known as Method Hiding. It is also known as</span><span style="font-family:Calibri;
">&nbsp;Method Shadowing. In method hiding, you can hide the implementation of the methods
                of a base class from the derived class using the&nbsp;new&nbsp;keyword. Or in other words, in method
                hiding, you can redefine the method of the base class in the derived class by using
                the&nbsp;</span><span style="font-family:Calibri;
background:rgb(255,255,0);">new&nbsp;</span><span style="font-family:Calibri;
">keyword.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc30271"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q32 - </span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">data hiding or shadowing&nbsp;</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">it will tell the environment that yes I want to </span><span style="font-family:Calibri;
background:rgb(255,255,0);">hide the property or functionality
                provided by the base class </span><span style="font-family:Calibri;
">so this is what we call the data hiding or shadowing where you can </span><span style="font-family:Calibri;
background:rgb(255,255,0);">completely ignore the definition
                provided by the base classes</span><span style="font-family:Calibri;
">.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="356" height="288" src="OOP QnA.files/OOP QnA13275.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc11981"></a><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">Q32. </span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">What is Aggregation , Association and Composition ?&nbsp;</span></b><b><span style="font-family:Calibri;
font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">The most exciting feature of a
                object oriented programmings that it mimics real world objects. &nbsp;It tries to code replicates real
                world objects like customers, supplier etc When we talk about real world objects the most complicated
                thing in real world is relationships.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="556" height="24" src="OOP QnA.files/OOP QnA13607.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">Inheritance - child and parent relationship</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="555" height="25" src="OOP QnA.files/OOP QnA13654.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
background:rgb(255,255,0);">Both this real world objects can
                stay without each other</span><span style="font-family:Calibri;
">. They have there own lifetime. The swipe card can be broken But the manager will live.
                &nbsp;It doesn't mean that the manager also dies. And the second thing, the manager resign from the
                company and go away and that swipe card still be assign to some other employee.</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="396" height="32" src="OOP QnA.files/OOP QnA13977.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">This kind of relationship is called as a aggregation relationship where </span><span style="font-family:Calibri;
background:rgb(255,255,0);">we have only one owner </span><span style="font-family:Calibri;
">for the objects but the objects can stay happily without the owner</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><img width="460" height="53" src="OOP QnA.files/OOP QnA14143.png"><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">The lifetime </span><span style="font-family:Calibri;
background:rgb(255,255,0);">both the objects are
                same</span><span style="font-family:Calibri;
">. In other words if the project goes off the manager will have problem the manager goes
                off the project will not be successful</span><span style="font-family:Calibri;
">
                <o:p></o:p>
            </span></p>
        <p class=MsoNormal><span style="font-family:Calibri;
">
                <o:p>&nbsp;</o:p>
            </span></p>

    </main><!-- End #main -->

    <!-- ======= Footer ======= -->
    <div w3-include-html="footer.htm"></div>
    <script>includeHTML();</script>

    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i
            class="bi bi-arrow-up-short"></i></a>

    <!-- Vendor JS Files -->
    <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Template Main JS File -->
    <script src="assets/js/main.js"></script>

</body>

</html>