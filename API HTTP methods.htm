<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>My Portfolio</title>
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="assets/img/favicon.png" rel="icon">

    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link
        href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
        rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="assets/css/style.css" rel="stylesheet">

    <script src="assets/js/layout.js"></script>
</head>

<body>

    <!-- ======= Header ======= -->
    <header id="header" class="header fixed-top d-flex align-items-center">

        <div class="d-flex align-items-center justify-content-between">
            <i class="bi bi-list toggle-sidebar-btn"></i>
        </div><!-- End Logo -->

        <nav class="header-nav ms-auto">

            <ul class="d-flex align-items-center">
                <div w3-include-html="header.htm"></div>
            </ul>
        </nav><!-- End Icons Navigation -->
    </header><!-- End Header -->

    <!-- ======= Sidebar ======= -->
    <div w3-include-html="sidebar.htm"></div>

    <main id="main" class="main">

        <p align=center>
            <span>Catalog</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span><span><a href="#_Toc25437 "><span>E</span><span>xploring and testing
                            APIs.</span><span>&#9;</span></a></span><span>
                    <o:p></o:p>
                </span></p>
        <p><span><a href="#_Toc2588 "><span>1. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">GET</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc11211 "><span>2. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">POST</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc4201 "><span>3. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">PUT</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc9020 "><span>4. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">PATCH</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc4012 "><span>5. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">DELETE</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc26322 "><span>6. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">HEAD</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc10864 "><span>7. </span><span style="letter-spacing:0.0000pt;
text-transform:none;font-style:normal;background:rgb(247,247,249);
">OPTIONS</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc26897 "><span>GET</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc8876 "><span>Testing an API with GET
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc8086 "><span>POST</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc19739 "><span>Testing an API with POST
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc13170 "><span>PUT</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc24746 "><span>Testing an API with PUT
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc29053 "><span>PATCH</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc2564 "><span>Testing an API with PATCH
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc25115 "><span>DELETE</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc11456 "><span>Testing an API with DELETE
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc27718 "><span>HEAD</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc18112 "><span>Testing an API with HEAD
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc17890 "><span>OPTIONS</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p><span><a href="#_Toc20412 "><span>Testing an API with OPTIONS
                        requests</span><span>&#9;</span></a></span><span>
                <o:p></o:p>
            </span></p>
        <p></span></w:Sdt><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1 style="page-break-after:avoid;page-break-before:always;
"><a name="_Toc25437"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">E</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">xploring and testing APIs.</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><img width="532" height="320" src="API HTTP methods.files/API HTTP methods1606.png"><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>HTTP Methods</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc2588"></a>
            <span><span>1.</span></span>
            <span><a href="#get"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">GET</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc11211"></a>
            <span><span>2.</span></span>
            <span><a href="#post"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">POST</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc4201"></a>
            <span><span>3.</span></span>
            <span><a href="#put"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">PUT</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc9020"></a>
            <span><span>4.</span></span>
            <span><a href="#patch"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">PATCH</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc4012"></a>
            <span><span>5.</span></span>
            <span><a href="#delete"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">DELETE</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc26322"></a>
            <span><span>6.</span></span>
            <span><a href="#head"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">HEAD</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.2500pt;text-indent:-21.2500pt;
"><a name="_Toc10864"></a>
            <span><span>7.</span></span>
            <span><a href="#options"><span class="29" style="color:rgb(189,65,71);
letter-spacing:0.0000pt;text-transform:none;font-style:normal;
background:rgb(247,247,249);">OPTIONS</span></a></span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc26897"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">GET</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span style="color:rgb(255,0,0);">GET </span><span>method is
                used to</span><span>&nbsp;</span><u><span style="font-weight:normal;text-decoration:underline;
">retrieve data from a server at the specified resource.</span></u><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc8876"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with GET requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span style="color:rgb(255,0,0);">GET </span><span>is often
                the</span><span>&nbsp;default method
                in HTTP clients</span><span>. I</span><span>t's important to&nbsp;</span><u><span
                    style="text-decoration:underline;">check every known
                    endpoint with a GET
                    request.</span></u><span>&nbsp;</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>At a basic level, these things should be
                validated:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Check that a valid GET request returns a</span><span
                style="background:rgb(255,255,0);">&nbsp;</span><span style="color:rgb(255,0,0);background:rgb(255,255,0);
">200</span><span style="color:rgb(255,0,0);">&nbsp;</span><span>status code.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Ensure that a GET request to a specific resource returns the
                correct data. For
                example,&nbsp;</span><span style="color:rgb(255,0,0);background:rgb(255,255,0);
">GET /users</span><span>&nbsp;returns a list of
                users.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><b><span class="31" style="color:rgb(55,58,60);
letter-spacing:0.0000pt;font-weight:bold;text-transform:none;
font-style:normal;font-size:8.0000pt;background:rgb(255,255,255);
">
                    <o:p>&nbsp;</o:p>
                </span></b></p>
        <h1><a name="_Toc8086"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">POST</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span style="color:rgb(255,0,0);">POST&nbsp;</span><span>requests are used to&nbsp;</span><u><span
                    style="text-decoration:underline;">send data to the API
                    server&nbsp;to create
                    or update a resource</span></u><span>. The data sent to the server is
                stored in the&nbsp;</span><span><a
                    href="https://stackoverflow.com/questions/22034144/what-does-it-mean-http-request-body"><span
                        style="color:rgb(255,0,0);">request body</span></a></span><span>&nbsp;of the HTTP
                request.</span><span>&nbsp;&nbsp;You have to add the</span><span
                style="color:rgb(255,0,0);">&nbsp;content-type</span><span>&nbsp;in header to tell what kind of
            </span><span>the</span><span>&nbsp;data/</span><span>media type</span><span>&nbsp;you are
                using.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>The simplest example is</span><span>&nbsp;</span><span><a href="https://assertible.com/contact"><span
                        style="color:rgb(255,0,0);">a contact form</span></a></span><span>&nbsp;on a website. When you
                fill out the inputs in a form and
                hit&nbsp;Send, that data is
                put in the&nbsp;</span><span style="color:rgb(255,0,0);">response body</span><span>&nbsp;of the request
                and sent to the server.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>POST&nbsp;</span><span>request
                is&nbsp;non-idempotent.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Note: </span><span>Idempotence, in
                programming and mathematics, is</span><span>&nbsp;</span><u><span style="text-decoration:underline;">a
                    property of some
                    operations such that no
                    matter how many times you execute them, you achieve the same result</span></u><span>.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Note: </span><u><span style="text-decoration:underline;">The Content-Type
                    representation header is
                    used to indicate the original media type of the resource</span></u><u><span
                    style="text-decoration:underline;">.</span></u><span>&nbsp;</span><span>(prior to any content
                encoding applied for sending). In responses, a Content-Type header
                provides the client with the actual content type of the returned content.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc19739"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with POST requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span style="color:rgb(255,0,0);">POST&nbsp;</span><span>requests are used to&nbsp;</span><u><span
                    style="text-decoration:underline;">send data to the API
                    server&nbsp;and
                    create or update a resource.</span></u><span>&nbsp;Since POST requests
                modify data, it's important to&nbsp;</span><u><span style="text-decoration:underline;">have API tests
                    for all
                    of your POST
                    methods.</span></u><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Here are some tips for testing POST requests:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Create a resource with a&nbsp;</span><span style="color:rgb(255,0,0);">POST&nbsp;</span><span>request
                and ensure a&nbsp;</span><span style="color:rgb(255,0,0);">200&nbsp;</span><span>status code is
                returned.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Next, make a&nbsp;</span><span style="color:rgb(255,0,0);">GET&nbsp;</span><span>request for that
                resource, and ensure the data was saved
                correctly.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Add tests that ensure&nbsp;</span><span
                style="color:rgb(255,0,0);">POST&nbsp;</span><span>requests&nbsp;</span><u><span
                    style="text-decoration:underline;">fail&nbsp;</span></u><span>with incorrect or ill-formatted
                data.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p>&nbsp;</o:p>
                </span></b></h1>
        <h1><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p>&nbsp;</o:p>
                </span></b></h1>
        <h1><a name="_Toc13170"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">PUT</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span style="color:rgb(255,0,0);">PUT&nbsp;</span><span>requests are used to send data to the API
                to&nbsp;</span><u><span style="text-decoration:underline;">update or create a
                    resource</span></u><span>.</span><span>&nbsp;</span><span><a
                    href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT"><u><span
                            style="text-decoration:underline;">PUT requests
                            are
                            idempotent</span></u></a></span><u><span
                    style="text-decoration:underline;">.</span></u><span>&nbsp;</span><span>That is, calling the same
                PUT request multiple times</span><span>&nbsp;</span><u><span style="text-decoration:underline;">will
                    always produce the
                    same
                    result</span></u><span>.&nbsp;</span><span>In contrast, calling a POST request repeatedly make have
                side effects of
                creating the same
                resource multiple times.</span><span>&nbsp;You have to add the</span><span
                style="color:rgb(255,0,0);">&nbsp;content-type</span><span>&nbsp;in header to tell what kind of
            </span><span>the</span><span>&nbsp;data/</span><span>media type</span><span>&nbsp;you are
                using.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Generally, when a</span><span>&nbsp;</span><span style="color:rgb(255,0,0);">PUT</span><span
                style="color:rgb(255,0,0);">&nbsp;</span><span>request&nbsp;creates&nbsp;a resource the server will
                respond with
                a&nbsp;</span><span style="color:rgb(255,0,0);">201&nbsp;(Created)</span><span>, and if the
                request&nbsp;modifies&nbsp;existing resource the server will
                return
                a&nbsp;</span><span style="color:rgb(255,0,0);">200&nbsp;(OK)</span><span>&nbsp;or&nbsp;</span><span
                style="color:rgb(255,0,0);">204&nbsp;(No Content)</span><span>.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc24746"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with PUT requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Check for these things when testing PUT
                requests:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Repeatedly calling a&nbsp;</span><span style="color:rgb(255,0,0);">PUT&nbsp;</span><span>request
                always returns the same result (</span><span><a href="#put"><u><span
                            style="text-decoration:underline;">idempotent</span></u></a></span><span>).</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>The proper status code is returned when creating and updating a
                resource
                (eg,&nbsp;</span><span style="color:rgb(255,0,0);">201&nbsp;</span><span>or&nbsp;</span><span
                style="color:rgb(255,0,0);">200</span><span>/</span><span
                style="color:rgb(255,0,0);">204</span><span>).</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>After updating a resource with a&nbsp;</span><span
                style="color:rgb(255,0,0);">PUT&nbsp;</span><span>request, a&nbsp;</span><span
                style="color:rgb(255,0,0);">GET&nbsp;</span><span>request for that resource should return the correct
                data.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span style="
color:rgb(255,0,0);"><span>&#9724;</span></span>
            <span style="color:rgb(255,0,0);">PUT&nbsp;</span><span>requests should fail if invalid data is supplied in
                the request
                --&nbsp;</span><u><span style="text-decoration:underline;">nothing should be
                    updated</span></u><span>.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <h1><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p>&nbsp;</o:p>
                </span></b></h1>
        <h1><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p>&nbsp;</o:p>
                </span></b></h1>
        <h1><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p>&nbsp;</o:p>
                </span></b></h1>
        <h1><a name="_Toc29053"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">PATCH</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>The difference with</span><span>&nbsp;</span><span style="color:rgb(255,0,0);">PATCH</span><span
                style="color:rgb(255,0,0);">&nbsp;</span><span>is that
                you&nbsp;</span><u><span style="text-decoration:underline;">only apply partial
                    modifications to the
                    resource</span></u><span>.</span><span>&nbsp;</span><span>The difference between
                PATCH and PUT, is that a</span><span>&nbsp;</span><span><a
                    href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH"><u><span
                            style="text-decoration:underline;">PATCH request
                            is
                            non-idempotent</span></u></a></span><span>&nbsp;(like a POST
                request).</span><span>&nbsp;You have to add the</span><span
                style="color:rgb(255,0,0);">&nbsp;content-type</span><span>&nbsp;in header to tell what kind of
            </span><span>the</span><span>&nbsp;data/</span><span>media type</span><span>&nbsp;you are
                using.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>To expand on partial modification, say you're API has
                a</span><span>&nbsp;</span><span
                style="color:rgb(255,0,0);">/users/{{userid}}</span><span>&nbsp;endpoint, and a user has
                a&nbsp;username. With a PATCH
                request,&nbsp;</span><u><span style="text-decoration:underline;">you may only need
                    to
                    send the updated
                    username</span></u><span>&nbsp;in the request body - as opposed to POST
                and PUT which require the full user
                entity.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc2564"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with PATCH requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>What to look for when testing PATCH requests:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>A successful&nbsp;</span><span style="color:rgb(255,0,0);">PATCH&nbsp;</span><span>request should
                return a&nbsp;</span><span style="color:rgb(255,0,0);">2xx&nbsp;</span><span>status code.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span style="
color:rgb(255,0,0);"><span>&#9724;</span></span>
            <span style="color:rgb(255,0,0);">PATCH&nbsp;</span><span>requests should fail if invalid data is supplied
                in the request
                --&nbsp;</span><u><span style="text-decoration:underline;">nothing should be
                    updated.</span></u><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc25115"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">DELETE</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>The</span><span>&nbsp;</span><span style="color:rgb(255,0,0);">DELETE</span><span
                style="color:rgb(255,0,0);">&nbsp;</span><span>method
                is exactly as it sounds:&nbsp;</span><u><span style="text-decoration:underline;">delete the resource at
                    the specified
                    URL</span></u><span>.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc11456"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with DELETE requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>A&nbsp;typical test case for a DELETE request&nbsp;would
                look like this:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Create a new user with a&nbsp;</span><span style="color:rgb(255,0,0);">POST</span><span
                style="color:rgb(255,0,0);">&nbsp;</span><span>request
                to</span><span style="color:rgb(255,0,0);">&nbsp;/users</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>With the user id returned from the&nbsp;</span><span style="color:rgb(255,0,0);">POST</span><span>,
                make
                a&nbsp;</span><span style="color:rgb(255,0,0);">DELETE&nbsp;</span><span>request to&nbsp;</span><span
                style="color:rgb(255,0,0);">/users/{{userid}}</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>A subsequent&nbsp;</span><span style="color:rgb(255,0,0);">GET&nbsp;</span><span>request
                to&nbsp;</span><span style="color:rgb(255,0,0);">/users/{{userid}}</span><span>&nbsp;should return a
            </span><span style="color:rgb(255,0,0);">404 </span><span>not found
                status code.</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc27718"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">HEAD</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>The</span><span>&nbsp;</span><span style="color:rgb(255,0,0);">HEAD</span><span
                style="color:rgb(255,0,0);">&nbsp;</span><span>method
                is almost identical to&nbsp;</span><span
                style="color:rgb(255,0,0);">GET</span><span>,&nbsp;</span><u><span
                    style="text-decoration:underline;">except without the
                    response
                    body</span></u><span>.</span><span>&nbsp;</span><span>In other words,
                if</span><span>&nbsp;</span><span style="color:rgb(255,0,0);">GET /users</span><span>&nbsp;returns a
                list of users, then&nbsp;</span><span style="color:rgb(255,0,0);">HEAD /users</span><span>&nbsp;will
                make the same request but won't get back the list of
                users.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>HEAD requests are</span><span>&nbsp;</span><u><span style="text-decoration:underline;">useful for
                    checking
                    what a GET request
                    will return</span></u><span>&nbsp;before actually making a GET request
                -- like before downloading a large file or
                response body.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc18112"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with HEAD requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Making API requests with&nbsp;</span><span style="color:rgb(255,0,0);">HEAD&nbsp;</span><span>methods
                is actually an effective way of simply&nbsp;</span><u><span style="text-decoration:underline;">verifying
                    that a
                    resource is
                    available</span></u><span>. It is good practice to have a test for HEAD
                requests everywhere you have a test for GET
                requests (as long as the API supports it).</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Check these things when testing an API with HEAD
                requests:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Verify and check&nbsp;</span><span><a
                    href="https://en.wikipedia.org/wiki/List_of_HTTP_header_fields"><u><span
                            style="text-decoration:underline;">HTTP
                            headers</span></u></a></span><span>&nbsp;returned from a HEAD
                request</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Make assertions against the status code of HEAD
                requests</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Test requests with various query parameter</span><span>s</span><span>&nbsp;to ensure the API
                responds</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span>Another useful case for&nbsp;</span><span style="color:rgb(255,0,0);">HEAD&nbsp;</span><span>requests
                is&nbsp;</span><span><a
                    href="https://blog.codeship.com/add-post-deploy-smoke-tests-to-any-codeship-pipeline/"><u><span
                            style="text-decoration:underline;">API smoke
                            testing</span></u></a></span><span>&nbsp;-&nbsp;</span><u><span
                    style="text-decoration:underline;">make a HEAD request
                    against every API
                    endpoint</span></u><span>&nbsp;to ensure they're available.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc17890"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">OPTIONS</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span style="color:rgb(255,0,0);">OPTIONS </span><span>request should</span><span>&nbsp;</span><u><span
                    style="text-decoration:underline;">return data describing
                    what&nbsp;other&nbsp;methods and operations the server supports&nbsp;at the given
                    URL</span></u><u><span
                    style="text-decoration:underline;">,</span></u><span>&nbsp;</span><span>making them a good
                candidate to</span><span>&nbsp;</span><u><span style="text-decoration:underline;">test for fatal API
                    errors.</span></u><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <h1><a name="_Toc20412"></a><b><span style="font-weight:bold;font-size:16.0000pt;
">Testing an API with OPTIONS requests</span></b><b><span style="font-weight:bold;font-size:16.0000pt;
">
                    <o:p></o:p>
                </span></b></h1>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>Testing an&nbsp;</span><span style="color:rgb(255,0,0);">OPTIONS&nbsp;</span><span>request is dependent
                on the web service; whether or not it supports that
                and what is
                supposed to return will&nbsp;</span><u><span style="text-decoration:underline;">define how you should
                    test
                    it</span></u><span>.</span><span>
                <o:p></o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>How to validate an endpoint using OPTIONS:</span><span>
                <o:p></o:p>
            </span></p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Primarily, check the response headers and status code of the
                request</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p style="margin-left:21.0000pt;text-indent:-21.0000pt;">
            <span><span>&#9724;</span></span>
            <span>Test endpoints that don't support OPTIONS, and ensure they fail
                appropriately</span><span>
                <o:p></o:p>
            </span>
        </p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>
        <p><span>
                <o:p>&nbsp;</o:p>
            </span></p>


    </main><!-- End #main -->

    <!-- ======= Footer ======= -->
    <div w3-include-html="footer.htm"></div>
    <script>includeHTML();</script>

    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i
            class="bi bi-arrow-up-short"></i></a>

    <!-- Vendor JS Files -->
    <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Template Main JS File -->
    <script src="assets/js/main.js"></script>

</body>

</html>